/*******************************************************************/
/*                                                                 */
/*                  BLANKLY FINANCE CONFIDENTIAL                   */
/*                   _ _ _ _ _ _ _ _ _ _ _ _ _                     */
/*                                                                 */
/* Copyright 2022 Blankly Finance Incorporated                     */
/* All Rights Reserved.                                            */
/*                                                                 */
/* NOTICE:  All information contained herein is, and remains the   */
/* property of Blankly Finance Incorporated and its suppliers, if  */
/* any.  The intellectual and technical concepts contained         */
/* herein are proprietary to Blankly Finance Incorporated and its  */
/* suppliers and may be covered by U.S. and Foreign Patents,       */
/* patents in process, and are protected by trade secret or        */
/* copyright law.  Dissemination of this information or            */
/* reproduction of this material is strictly forbidden unless      */
/* prior written permission is obtained from Blankly Finance       */
/* Incorporated.                                                   */
/*                                                                 */
/*******************************************************************/

import { ModelDeploymentRequest, BacktestRequest } from '@/types/requests';
import axios from 'axios';
import axiosRetry from "axios-retry";

axios.defaults.timeout = 600000;

export function createDeploymentAPIClient(token: string) {
  const instance = axios.create({
    baseURL: process.env.NODE_ENV === "production" ? 'https://deploy.blankly.finance' : "https://deployment-api-ictyw5jxjq-uc.a.run.app",
    headers: {
      token: token,
    },
  });

  axiosRetry(instance, { retryDelay: axiosRetry.exponentialDelay });

  instance.interceptors.response.use((value) => {
    return value.data;
  });
  return instance;
}

export const listKeys = async (token: string, projectId: string) => {
  const req = createDeploymentAPIClient(token);
  return req.post('/project/list-tokens', { projectId });
}

export function deleteKey(token: string, projectId: string, tokenId: string) {
  const req = createDeploymentAPIClient(token);
  return req.post('/project/delete-project-token', { projectId, tokenId });
}

export function generateKey(token: string, projectId: string, name: string) {
  const req = createDeploymentAPIClient(token);
  return req.post('/project/generate-project-token', { projectId, name, autogenerated: false });
}

export function deployModel(token: string, deployment: ModelDeploymentRequest) {
  const req = createDeploymentAPIClient(token);
  return req.get('/model/run', { data: deployment });
}

export function backtest(token: string, backtestData: BacktestRequest) {
  const req = createDeploymentAPIClient(token);
  return req.get('/model/backtest', { data: backtestData });
}
